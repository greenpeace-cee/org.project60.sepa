<?php
use CRM_Sepa_ExtensionUtil as E;
return [
  'name' => 'SEPACreditor',
  'table' => 'civicrm_sdd_creditor',
  'class' => 'CRM_Sepa_DAO_SEPACreditor',
  'getInfo' => fn() => [
    'title' => E::ts('SEPACreditor'),
    'title_plural' => E::ts('SEPACreditors'),
    'description' => E::ts('FIXME'),
    'log' => TRUE,
    'add' => '4.3',
    'label_field' => 'label',
  ],
  'getFields' => fn() => [
    'id' => [
      'title' => E::ts('ID'),
      'sql_type' => 'int unsigned',
      'input_type' => 'Number',
      'required' => TRUE,
      'description' => E::ts('ID'),
      'add' => '4.3',
      'primary_key' => TRUE,
      'auto_increment' => TRUE,
    ],
    'creditor_id' => [
      'title' => E::ts('Creditor Contact ID'),
      'sql_type' => 'int unsigned',
      'input_type' => 'EntityRef',
      'description' => E::ts('FK to Contact ID that owns that account'),
      'add' => '4.3',
      'entity_reference' => [
        'entity' => 'Contact',
        'key' => 'id',
        'on_delete' => 'SET NULL',
      ],
    ],
    'identifier' => [
      'title' => E::ts('SEPA Creditor identifier'),
      'sql_type' => 'varchar(35)',
      'input_type' => 'Text',
      'description' => E::ts('Provided by the bank. ISO country code+check digit+ZZZ+country specific identifier'),
      'add' => '4.3',
    ],
    'name' => [
      'title' => E::ts('Creditor Name'),
      'sql_type' => 'varchar(255)',
      'input_type' => 'Text',
      'description' => E::ts('official creditor name, passed to exported files'),
      'add' => '4.3',
    ],
    'label' => [
      'title' => E::ts('Creditor Label'),
      'sql_type' => 'varchar(255)',
      'input_type' => 'Text',
      'description' => E::ts('internally used label for the creditor'),
      'add' => '4.3',
    ],
    'address' => [
      'title' => E::ts('Address of the creditor'),
      'sql_type' => 'varchar(255)',
      'input_type' => 'Text',
      'description' => E::ts('by default creditor_id.address (billing) at creation'),
      'add' => '4.3',
    ],
    'country_id' => [
      'title' => E::ts('Country'),
      'sql_type' => 'int unsigned',
      'input_type' => 'EntityRef',
      'description' => E::ts('Which Country does this address belong to.'),
      'add' => '4.3',
      'entity_reference' => [
        'entity' => 'Country',
        'key' => 'id',
        'on_delete' => 'SET NULL',
      ],
    ],
    'iban' => [
      'title' => E::ts('Iban'),
      'sql_type' => 'varchar(42)',
      'input_type' => 'Text',
      'description' => E::ts('Iban of the creditor'),
      'add' => '4.3',
    ],
    'bic' => [
      'title' => E::ts('Bic'),
      'sql_type' => 'varchar(11)',
      'input_type' => 'Text',
      'description' => E::ts('BIC of the creditor'),
      'add' => '4.3',
    ],
    'mandate_prefix' => [
      'title' => E::ts('Mandate numering prefix'),
      'sql_type' => 'varchar(4)',
      'input_type' => 'Text',
      'description' => E::ts('prefix for mandate identifiers'),
      'add' => '4.3',
    ],
    'currency' => [
      'title' => E::ts('Currency'),
      'sql_type' => 'varchar(3)',
      'input_type' => 'Text',
      'description' => E::ts('currency used by this creditor'),
      'add' => '4.3',
    ],
    'payment_processor_id' => [
      'title' => E::ts('Payment Processor ID'),
      'sql_type' => 'int unsigned',
      'input_type' => 'EntityRef',
      'description' => E::ts('Payment processor link (to be deprecated)'),
      'add' => '4.3',
      'entity_reference' => [
        'entity' => 'PaymentProcessor',
        'key' => 'id',
      ],
    ],
    'category' => [
      'title' => E::ts('Category purpose of the collection'),
      'sql_type' => 'varchar(4)',
      'input_type' => 'Text',
      'description' => E::ts('Default value'),
      'add' => '4.3',
    ],
    'tag' => [
      'title' => E::ts('Tag'),
      'sql_type' => 'varchar(64)',
      'input_type' => 'Text',
      'description' => E::ts('Place this creditor\'s transaction groups in an XML file tagged with this value.'),
      'add' => '4.3',
    ],
    'mandate_active' => [
      'title' => E::ts('Immediately activate new Mandates'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('If true, new Mandates for this Creditor are set to active directly upon creation; otherwise, they have to be activated explicitly later on.'),
      'add' => '4.4',
    ],
    'sepa_file_format_id' => [
      'title' => E::ts('SEPA File Format'),
      'sql_type' => 'int unsigned',
      'input_type' => 'Select',
      'description' => E::ts('Variant of the pain.008 format to use when generating SEPA XML files for this creditor. FK to SEPA File Formats in civicrm_option_value.'),
      'add' => '4.4',
      'pseudoconstant' => [
        'option_group_name' => 'sepa_file_format',
      ],
    ],
    'creditor_type' => [
      'title' => E::ts('Creditor Type'),
      'sql_type' => 'varchar(8)',
      'input_type' => 'Text',
      'description' => E::ts('Type of the creditor, values are SEPA (default) and PSP'),
    ],
    'pi_ooff' => [
      'title' => E::ts('OOFF Payment Instruments'),
      'sql_type' => 'varchar(64)',
      'input_type' => 'Text',
      'description' => E::ts('Payment instruments, comma separated, to be used for one-off collections'),
    ],
    'pi_rcur' => [
      'title' => E::ts('RCUR Payment Instruments'),
      'sql_type' => 'varchar(64)',
      'input_type' => 'Text',
      'description' => E::ts('Payment instruments, comma separated, to be used for recurring collections'),
    ],
    'uses_bic' => [
      'title' => E::ts('Immediately activate new Mandates'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('If true, BICs are not used for this creditor'),
    ],
    'cuc' => [
      'title' => E::ts('CUC'),
      'sql_type' => 'varchar(8)',
      'input_type' => 'Text',
      'description' => E::ts('CUC of the creditor'),
    ],
  ],
];
